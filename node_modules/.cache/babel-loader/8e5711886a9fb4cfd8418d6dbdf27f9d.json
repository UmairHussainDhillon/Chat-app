{"ast":null,"code":"var _jsxFileName = \"F:\\\\Chat-App\\\\chat-app\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { Button, FormGroup, FormControl } from \"react-bootstrap\";\nimport Axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport swal from 'sweetalert';\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleValidation = () => {\n      let errors = {};\n      let formIsValid = true; //Password\n\n      if (!this.state.password) {\n        formIsValid = false;\n        errors[\"password\"] = \"Cannot be empty\";\n      } //Email\n\n\n      if (!this.state.email) {\n        formIsValid = false;\n        errors[\"email\"] = \"Cannot be empty\";\n      }\n\n      if (this.state.email && typeof this.state.email !== \"undefined\") {\n        let lastAtPos = this.state.email.lastIndexOf('@');\n        let lastDotPos = this.state.email.lastIndexOf('.');\n\n        if (!(lastAtPos < lastDotPos && lastAtPos > 0 && this.state.email.indexOf('@@') === -1 && lastDotPos > 2 && this.state.email.length - lastDotPos > 2)) {\n          formIsValid = false;\n          errors[\"email\"] = \"Email is not valid\";\n        }\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    };\n\n    this.login = e => {\n      e.preventDefault();\n\n      if (this.handleValidation()) {\n        Axios({\n          method: \"POST\",\n          data: {\n            email: this.state.email,\n            password: this.state.password\n          },\n          withCredentials: true,\n          url: \"http://localhost:4000/login\"\n        }).then(res => {\n          console.log(res);\n\n          if (res.data.status === 200) {\n            localStorage.setItem('token', res.data.token);\n            this.props.handleResponse(res.data);\n            this.props.history.push(\"/dashboard\");\n          } else {\n            swal(\"There is an error\");\n          }\n\n          this.setState({\n            data: res.data\n          }); // this.handleResponse();\n        });\n      } else {\n        swal(\"Oops!\", \"Form has errors.\");\n      }\n    };\n\n    this.state = {\n      password: \"\",\n      email: \"\",\n      errors: {},\n      data: \"\",\n      token: localStorage.getItem(\"token\")\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: Register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"email\",\n      bsSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(FormControl, {\n      autoFocus: true,\n      type: \"email\",\n      value: email //  onChange={e => setEmail(e.target.value)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"password\",\n      bsSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(FormControl, {\n      value: password //  onChange={e => setPassword(e.target.value)}\n      ,\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      bsSize: \"large\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, \"Login\")))\n    /* <div >\r\n       <div >\r\n         <div ><b>Login</b></div>\r\n         <div >\r\n           <form >\r\n           <div className=\"form \">\r\n             <div className=\"form-group\">\r\n               <label htmlFor=\"email\">Email</label>\r\n               <input \r\n               value={this.state.value}\r\n                 type=\"email\"\r\n                 name=\"email\"\r\n                 placeholder=\"Enter email\"\r\n                 onChange={this.handleChange.bind(this)}                  />\r\n             <span style={{color: \"red\"}}>{this.state.errors[\"email\"]}</span>\r\n               </div>\r\n             <div className=\"form-group\">\r\n               <label htmlFor=\"password\">Password</label>\r\n               <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={this.state.value}\r\n                  onChange={this.handleChange.bind(this)\r\n                  }                  />\r\n                   <span style={{color: \"red\"}}>{this.state.errors[\"password\"]}</span>\r\n               </div>\r\n           </div>\r\n        \r\n             \r\n             <button type=\"submit\" onClick={this.login.bind(this)} className=\"btn btn-primary\">\r\n             Login\r\n           </button>\r\n             <p>  Not a User?\r\n                 <Link to=\"/register\">Sign up</Link>\r\n             </p>          \r\n       \r\n    </form>\r\n    </div>\r\n    </div>\r\n    </div>*/\n    ;\n  }\n\n}\n;","map":{"version":3,"sources":["F:/Chat-App/chat-app/src/components/Login.js"],"names":["React","Component","Button","FormGroup","FormControl","Axios","Link","swal","Login","constructor","props","handleValidation","errors","formIsValid","state","password","email","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","setState","login","e","preventDefault","method","data","withCredentials","url","then","res","console","log","status","localStorage","setItem","token","handleResponse","history","push","getItem","handleChange","bind","target","name","value","render","Register"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, FormGroup, FormControl } from \"react-bootstrap\";\r\n\r\nimport Axios from 'axios'\r\nimport {\r\n     Link,\r\n} from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n      password: \"\",\r\n      email: \"\",\r\n      errors: {},\r\n     data: \"\",\r\n     token:localStorage.getItem(\"token\"),\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  };\r\n  handleChange(e){         \r\n    this.setState({ [e.target.name] : e.target.value });   \r\n}\r\n  \r\n handleValidation = () => {\r\n  let errors = {};\r\n  let formIsValid = true;\r\n //Password\r\n if(!this.state.password){\r\n  formIsValid = false;\r\n  errors[\"password\"] = \"Cannot be empty\";\r\n}\r\n\r\n\r\n  //Email\r\n  if(!this.state.email){\r\n     formIsValid = false;\r\n     errors[\"email\"] = \"Cannot be empty\";\r\n  }\r\n\r\n  if(this.state.email && typeof this.state.email !== \"undefined\"){\r\n     let lastAtPos = this.state.email.lastIndexOf('@');\r\n     let lastDotPos = this.state.email.lastIndexOf('.');\r\n\r\n     if (!(lastAtPos < lastDotPos && lastAtPos > 0 && this.state.email.indexOf('@@') === -1 && lastDotPos > 2 && (this.state.email.length - lastDotPos) > 2)) {\r\n        formIsValid = false;\r\n        errors[\"email\"] = \"Email is not valid\";\r\n      }\r\n }  \r\n this.setState({errors: errors});\r\n return formIsValid;\r\n};\r\n\r\n\r\n login = (e) => {\r\n  e.preventDefault();\r\n  if(this.handleValidation()){\r\n  Axios({\r\n    method: \"POST\",\r\n    data: {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    },\r\n    withCredentials: true,\r\n    url: \"http://localhost:4000/login\",\r\n  }).then((res) =>{\r\n    console.log(res)\r\n    if(res.data.status === 200){\r\n      localStorage.setItem('token',res.data.token)\r\n      this.props.handleResponse(res.data);\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    else{\r\n      swal(\"There is an error\")\r\n    }\r\n    this.setState({data: res.data})\r\n\r\n   // this.handleResponse();\r\n\r\n  });\r\n  \r\n}else{\r\n  swal(\"Oops!\",\"Form has errors.\")\r\n}\r\n };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"Login\">\r\n      <form onSubmit={Register}>\r\n        <FormGroup controlId=\"email\" bsSize=\"large\">\r\n          <Label>Email</Label>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"email\"\r\n            value={email}\r\n          //  onChange={e => setEmail(e.target.value)}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup controlId=\"password\" bsSize=\"large\">\r\n          <Label>Password</Label>\r\n          <FormControl\r\n            value={password}\r\n          //  onChange={e => setPassword(e.target.value)}\r\n            type=\"password\"\r\n          />\r\n        </FormGroup>\r\n        <Button block bsSize=\"large\"  type=\"submit\">\r\n          Login\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  \r\n     /* <div >\r\n        <div >\r\n          <div ><b>Login</b></div>\r\n          <div >\r\n            <form >\r\n            <div className=\"form \">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input \r\n                value={this.state.value}\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  onChange={this.handleChange.bind(this)}                  />\r\n              <span style={{color: \"red\"}}>{this.state.errors[\"email\"]}</span>\r\n\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                   type=\"password\"\r\n                   name=\"password\"\r\n                   placeholder=\"Password\"\r\n                   value={this.state.value}\r\n                   onChange={this.handleChange.bind(this)\r\n                   }                  />\r\n                    <span style={{color: \"red\"}}>{this.state.errors[\"password\"]}</span>\r\n\r\n              </div>\r\n            </div>\r\n         \r\n              \r\n              <button type=\"submit\" onClick={this.login.bind(this)} className=\"btn btn-primary\">\r\n              Login\r\n            </button>\r\n              <p>  Not a User?\r\n                  <Link to=\"/register\">Sign up</Link>\r\n              </p>          \r\n        \r\n     </form>\r\n     </div>\r\n     </div>\r\n</div>*/\r\n )}};\r\n   \r\n\r\n"]},"metadata":{},"sourceType":"module"}