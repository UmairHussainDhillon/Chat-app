{"ast":null,"code":"const emitterify = require('utilise/emitterify');\n\nmodule.exports = function event(node, index) {\n  node = node.host && node.host.nodeName ? node.host : node;\n  if (node.on) return;\n  node.listeners = {};\n\n  const on = o => {\n    const type = o.type.split('.').shift();\n    if (!node.listeners[type]) node.addEventListener(type, node.listeners[type] = event => !event.detail || !event.detail.emitted ? emit(type, [event, node.state, node]) : 0);\n  };\n\n  const off = o => {\n    if (!node.on[o.type] || !node.on[o.type].length) {\n      node.removeEventListener(o.type, node.listeners[o.type]);\n      delete node.listeners[o.type];\n    }\n  };\n\n  emitterify(node, {\n    on,\n    off\n  });\n  const {\n    emit\n  } = node;\n\n  node.emit = function (type, params) {\n    const detail = {\n      params,\n      emitted: true\n    },\n          event = new CustomEvent(type, {\n      detail,\n      bubbles: false,\n      cancelable: true\n    });\n    node.dispatchEvent(event);\n    return emit(type, event);\n  };\n};","map":{"version":3,"sources":["F:/Assessment/client/chat-app/node_modules/@compone/event/index.js"],"names":["emitterify","require","module","exports","event","node","index","host","nodeName","on","listeners","o","type","split","shift","addEventListener","detail","emitted","emit","state","off","length","removeEventListener","params","CustomEvent","bubbles","cancelable","dispatchEvent"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,oBAAD,CAA1B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,KAAT,CAAeC,IAAf,EAAqBC,KAArB,EAA4B;AAC3CD,EAAAA,IAAI,GAAGA,IAAI,CAACE,IAAL,IAAaF,IAAI,CAACE,IAAL,CAAUC,QAAvB,GAAkCH,IAAI,CAACE,IAAvC,GAA8CF,IAArD;AACA,MAAIA,IAAI,CAACI,EAAT,EAAa;AACbJ,EAAAA,IAAI,CAACK,SAAL,GAAiB,EAAjB;;AAEA,QAAMD,EAAE,GAAGE,CAAC,IAAI;AACd,UAAMC,IAAI,GAAGD,CAAC,CAACC,IAAF,CAAOC,KAAP,CAAa,GAAb,EAAkBC,KAAlB,EAAb;AACA,QAAI,CAACT,IAAI,CAACK,SAAL,CAAeE,IAAf,CAAL,EACEP,IAAI,CAACU,gBAAL,CAAsBH,IAAtB,EAA4BP,IAAI,CAACK,SAAL,CAAeE,IAAf,IAC1BR,KAAK,IAAK,CAACA,KAAK,CAACY,MAAP,IAAiB,CAACZ,KAAK,CAACY,MAAN,CAAaC,OAA/B,GAAyCC,IAAI,CAACN,IAAD,EAAO,CAACR,KAAD,EAAQC,IAAI,CAACc,KAAb,EAAoBd,IAApB,CAAP,CAA7C,GAAiF,CAD7F;AAGH,GAND;;AAQA,QAAMe,GAAG,GAAGT,CAAC,IAAI;AACf,QAAI,CAACN,IAAI,CAACI,EAAL,CAAQE,CAAC,CAACC,IAAV,CAAD,IAAoB,CAACP,IAAI,CAACI,EAAL,CAAQE,CAAC,CAACC,IAAV,EAAgBS,MAAzC,EAAiD;AAC/ChB,MAAAA,IAAI,CAACiB,mBAAL,CAAyBX,CAAC,CAACC,IAA3B,EAAiCP,IAAI,CAACK,SAAL,CAAeC,CAAC,CAACC,IAAjB,CAAjC;AACA,aAAOP,IAAI,CAACK,SAAL,CAAeC,CAAC,CAACC,IAAjB,CAAP;AACD;AACF,GALD;;AAOAZ,EAAAA,UAAU,CAACK,IAAD,EAAO;AAAEI,IAAAA,EAAF;AAAMW,IAAAA;AAAN,GAAP,CAAV;AACA,QAAM;AAAEF,IAAAA;AAAF,MAAWb,IAAjB;;AAEAA,EAAAA,IAAI,CAACa,IAAL,GAAY,UAASN,IAAT,EAAeW,MAAf,EAAsB;AAChC,UAAMP,MAAM,GAAG;AAAEO,MAAAA,MAAF;AAAUN,MAAAA,OAAO,EAAE;AAAnB,KAAf;AAAA,UACMb,KAAK,GAAG,IAAIoB,WAAJ,CAAgBZ,IAAhB,EAAsB;AAAEI,MAAAA,MAAF;AAAUS,MAAAA,OAAO,EAAE,KAAnB;AAA0BC,MAAAA,UAAU,EAAE;AAAtC,KAAtB,CADd;AAEArB,IAAAA,IAAI,CAACsB,aAAL,CAAmBvB,KAAnB;AACA,WAAOc,IAAI,CAACN,IAAD,EAAOR,KAAP,CAAX;AACD,GALD;AAMD,CA7BD","sourcesContent":["const emitterify = require('utilise/emitterify')\r\n\r\nmodule.exports = function event(node, index) {\r\n  node = node.host && node.host.nodeName ? node.host : node\r\n  if (node.on) return\r\n  node.listeners = {}\r\n\r\n  const on = o => {\r\n    const type = o.type.split('.').shift()\r\n    if (!node.listeners[type])\r\n      node.addEventListener(type, node.listeners[type] = \r\n        event => (!event.detail || !event.detail.emitted ? emit(type, [event, node.state, node]) : 0)\r\n      )\r\n  }\r\n\r\n  const off = o => {\r\n    if (!node.on[o.type] || !node.on[o.type].length) {\r\n      node.removeEventListener(o.type, node.listeners[o.type])\r\n      delete node.listeners[o.type]\r\n    }\r\n  }\r\n\r\n  emitterify(node, { on, off })\r\n  const { emit } = node\r\n\r\n  node.emit = function(type, params){\r\n    const detail = { params, emitted: true }\r\n        , event = new CustomEvent(type, { detail, bubbles: false, cancelable: true })\r\n    node.dispatchEvent(event)\r\n    return emit(type, event)\r\n  }\r\n}"]},"metadata":{},"sourceType":"script"}